/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/app.js":
/*!***********************!*\
  !*** ./src/js/app.js ***!
  \***********************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n// const BODY = document.querySelector('body');\n//\n// import * as functions from \"./modules/functions.js\";\n// import * as page from \"./modules/page.js\";\n// import * as form from \"./modules/form.js\";\n//\n// import Swiper, { Navigation, Pagination, Autoplay, Controller, Thumbs, Scrollbar, Mousewheel } from \"swiper\";\n//\n// import SimpleBar from \"simplebar\";\n//\n// // Device viewport height\n// const appHeight = () => {\n//     const doc = document.documentElement;\n//     doc.style.setProperty('--app-height', `${window.innerHeight}px`);\n// }\n//\n// //----------- Menu ---------------\n// function menu(link) {\n//     const menu = link.closest('.menu');\n//     const menuLinks = menu.querySelectorAll('.menu__link');\n//     const submenus = menu.querySelectorAll('.submenu');\n//\n//     if (!link.classList.contains('active')) {\n//         menuLinks.forEach((menuLink) => {\n//             menuLink.classList.remove('active');\n//         });\n//         submenus.forEach((submenu) => {\n//             submenu.classList.remove('active');\n//         });\n//         BODY.classList.add('_lock');\n//     } else {\n//         BODY.classList.remove('_lock');\n//     }\n//\n//     link.classList.toggle('active');\n//     link.nextElementSibling.classList.toggle('active');\n//\n//     document.addEventListener('keydown', (e) => {\n//         if (e.key === 'Escape') {\n//             BODY.classList.remove('_lock');\n//             menuLinks.forEach((menuLink) => {\n//                 menuLink.classList.remove('active');\n//             });\n//             submenus.forEach((submenu) => {\n//                 submenu.classList.remove('active');\n//             });\n//         }\n//     });\n// }\n// function submenuHide() {\n//     const menuLinks = document.querySelectorAll('.menu__link');\n//     const submenus = document.querySelectorAll('.submenu');\n//\n//     if (menuLinks.length && submenus.length) {\n//         BODY.classList.remove('_lock');\n//         menuLinks.forEach((menuLink) => {\n//             menuLink.classList.remove('active');\n//         });\n//         submenus.forEach((submenu) => {\n//             submenu.classList.remove('active');\n//         });\n//     }\n// }\n// function showUserMenu() {\n//     const userMenu = document.querySelector('.user-header');\n//     userMenu.classList.add('active');\n// }\n// function hideUserMenu() {\n//     const userMenu = document.querySelector('.user-header');\n//     userMenu.classList.remove('active');\n// }\n// function showSearch() {\n//     const search = document.querySelector('.search');\n//     search.classList.toggle('active');\n// }\n// function hideSearch() {\n//     const search = document.querySelector('.search');\n//     search.classList.remove('active');\n// }\n// function submenuHeight() {\n//     const submenu = document.querySelector('.submenu.active');\n//     if (submenu && submenu.classList.contains('active')) {\n//         let height = submenu.clientHeight;\n//         submenu.style.height = height + 'px';\n//\n//         setTimeout(() => {\n//             submenu.style.height = 'auto';\n//         }, 300);\n//     }\n// }\n// function activateSubmenu() {\n//     const links = document.querySelectorAll('.menu__link');\n//     const submenus = document.querySelectorAll('.submenu');\n//     const activeLink = document.querySelector('.menu__link.active');\n//\n//     if (!activeLink) {\n//         links[0].classList.add('active');\n//         submenus[0].classList.add('active');\n//     }\n// }\n// function deactivateMenu() {\n//     const menu = document.querySelector('.menu__body');\n//     const menuIcon = document.querySelector('.menu-icon');\n//     menu.classList.remove('active');\n//     menuIcon.classList.remove('active');\n//     BODY.classList.remove('_lock');\n// }\n//\n// //----------- Sliders -------------\n// function mainGoodsSlider() {\n//     const mainGoods = new Swiper('.goods-main__slider', {\n//         modules: [Navigation, Pagination, Autoplay],\n//         observer: true,\n//         observeParents: true,\n//         observeSlideChildren: true,\n//         slidesPerView: 1.4,\n//         spaceBetween: 24,\n//         centeredSlides: true,\n//         loop: true,\n//         speed: 700,\n//         autoplay: {\n//             delay: 3000,\n//             reverseDirection: true,\n//             disableOnInteraction: false,\n//         },\n//         breakpoints: {\n//             480: {\n//                 slidesPerView: 2,\n//             },\n//             576: {\n//                 slidesPerView: 2.6,\n//             },\n//             768: {\n//                 slidesPerView: 3.4,\n//             },\n//             992: {\n//                 slidesPerView: 4.4,\n//             },\n//             1200: {\n//                 slidesPerView: 5.4,\n//             },\n//             1400: {\n//                 slidesPerView: 6.4,\n//             },\n//             1800: {\n//                 slidesPerView: 7.5,\n//             },\n//         },\n//         navigation: {\n//             prevEl: '.goods-main__prev',\n//             nextEl: '.goods-main__next',\n//         },\n//         pagination: {\n//             el: \".goods-main__pagination\",\n//             clickable: true,\n//         },\n//     });\n// }\n// function mainCatSlider() {\n//     const mainCat = new Swiper('.cat-main__slider', {\n//         modules: [Autoplay, Controller],\n//         observer: true,\n//         observeParents: true,\n//         observeSlideChildren: true,\n//         slidesPerView: 2.5,\n//         spaceBetween: 8,\n//         autoplay: {\n//             enabled: false,\n//             delay: 0,\n//             disableOnInteraction: false,\n//         },\n//         speed: 500,\n//         breakpoints: {\n//             576: {\n//                 slidesPerView: 3.5,\n//                 spaceBetween: 8,\n//                 speed: 500,\n//                 autoplay: {\n//                     enabled: false,\n//                 },\n//             },\n//             768: {\n//                 slidesPerView: 4.5,\n//                 spaceBetween: 8,\n//                 speed: 500,\n//                 autoplay: {\n//                     enabled: false,\n//                 },\n//             },\n//             993: {\n//                 slidesPerView: 4.5,\n//                 spaceBetween: 8,\n//                 speed: 10000,\n//                 autoplay: {\n//                     enabled: true,\n//                 },\n//             },\n//             1200: {\n//                 slidesPerView: 4.5,\n//                 spaceBetween: 16,\n//                 speed: 10000,\n//                 autoplay: {\n//                     enabled: true,\n//                 },\n//             },\n//             1400: {\n//                 slidesPerView: 6,\n//                 spaceBetween: 16,\n//                 speed: 10000,\n//                 autoplay: {\n//                     enabled: true,\n//                 },\n//             }\n//         },\n//         on: {\n//             slideChange: function () {\n//                 functions.lazyLoading();\n//             },\n//         },\n//     });\n// }\n// function mainCatSlider2() {\n//     const mainCat2 = new Swiper('.cat-main__slider2', {\n//         modules: [Autoplay, Controller],\n//         observer: true,\n//         observeParents: true,\n//         observeSlideChildren: true,\n//         slidesPerView: 2.5,\n//         spaceBetween: 8,\n//         autoplay: {\n//             enabled: false,\n//             delay: 0,\n//             disableOnInteraction: false,\n//             reverseDirection: true,\n//         },\n//         speed: 500,\n//         breakpoints: {\n//             576: {\n//                 slidesPerView: 3.5,\n//                 spaceBetween: 8,\n//                 speed: 500,\n//                 autoplay: {\n//                     enabled: false,\n//                 },\n//             },\n//             768: {\n//                 slidesPerView: 4.5,\n//                 spaceBetween: 8,\n//                 speed: 500,\n//                 autoplay: {\n//                     enabled: false,\n//                 },\n//             },\n//             993: {\n//                 slidesPerView: 4.5,\n//                 spaceBetween: 8,\n//                 speed: 10000,\n//                 autoplay: {\n//                     enabled: true,\n//                 },\n//             },\n//             1200: {\n//                 slidesPerView: 4.5,\n//                 spaceBetween: 16,\n//                 speed: 10000,\n//                 autoplay: {\n//                     enabled: true,\n//                 },\n//             },\n//             1400: {\n//                 slidesPerView: 6,\n//                 spaceBetween: 16,\n//                 speed: 10000,\n//                 autoplay: {\n//                     enabled: true,\n//                 },\n//             }\n//         },\n//         on: {\n//             slideChange: function () {\n//                 functions.lazyLoading();\n//             }\n//         },\n//     });\n//\n//     if (document.querySelector('.cat-main__slider2') && window.innerWidth > 992) {\n//         mainCat2.slideTo(mainCat2.slides.length - 1, 0, false);\n//     }\n// }\n// function prodCardColors() {\n//     const colorSliders = document.querySelectorAll('.colors-card__slider');\n//\n//     if (colorSliders.length) {\n//         colorSliders.forEach((item) => {\n//             const prev = item.querySelector('.navigation__prev');\n//             const next = item.querySelector('.navigation__next');\n//             const colorSlider = new Swiper(item, {\n//                 modules: [Navigation],\n//                 observer: true,\n//                 observeParents: true,\n//                 observeSlideChildren: true,\n//                 centerInsufficientSlides: true,\n//                 slidesPerView: 'auto',\n//                 spaceBetween: 8,\n//                 navigation: {\n//                     prevEl: prev,\n//                     nextEl: next\n//                 },\n//             });\n//         });\n//     }\n// }\n// function oneLookSlider() {\n//     const lookSlider = new Swiper('.look__slider', {\n//         observer: true,\n//         observeParents: true,\n//         observeSlideChildren: true,\n//         slidesPerView: 1.2,\n//         spaceBetween: 16,\n//         breakpoints: {\n//             480: {\n//                 slidesPerView: 1.7,\n//             },\n//             576: {\n//                 slidesPerView: 2.2,\n//             },\n//             993: {\n//                 slidesPerView: 2.6,\n//             },\n//         },\n//         on: {\n//             slideChange: function () {\n//                 functions.lazyLoading();\n//             },\n//         },\n//     });\n// }\n// function productSlider() {\n//     const productThumbs = new Swiper('.thumbs-product__slider', {\n//         modules: [Thumbs, Scrollbar, Mousewheel],\n//         observer: true,\n//         observeParents: true,\n//         observeSlideChildren: true,\n//         slidesPerView: 'auto',\n//         spaceBetween: 16,\n//         centerInsufficientSlides: true,\n//         direction: 'vertical',\n//         autoHeight: true,\n//         scrollbar: {\n//             el: '.thumbs-product__scrollbar',\n//             draggable: true,\n//         },\n//         mousewheel: {\n//\n//         },\n//         on: {\n//             slideChange: function () {\n//                 functions.lazyLoading();\n//             },\n//         },\n//     });\n//\n//     const productSlider = new Swiper('.image-product__slider', {\n//         modules: [Thumbs, Navigation],\n//         observer: true,\n//         observeParents: true,\n//         observeSlideChildren: true,\n//         slidesPerView: 1,\n//         navigation: {\n//             prevEl: '.image-product__prev',\n//             nextEl: '.image-product__next'\n//         },\n//         on: {\n//             slideChange: function () {\n//                 functions.lazyLoading();\n//             },\n//         },\n//         thumbs: {\n//             swiper: productThumbs,\n//         },\n//     });\n//\n//     window.addEventListener('resize', () => {\n//         changeDirection();\n//     });\n//     changeDirection();\n//\n//     function changeDirection() {\n//         const thumbs = document.querySelector('.thumbs-product__slider');\n//         if (thumbs && window.innerWidth <= 1200) {\n//             productThumbs.changeDirection('horizontal', true);\n//         } else if (thumbs) {\n//             productThumbs.changeDirection('vertical', true);\n//         }\n//     }\n// }\n// function marquee(time) {\n//     const marqueeItems = document.querySelectorAll('.marquee');\n//\n//     if (marqueeItems.length) {\n//         marqueeItems.forEach((marqueeItem) => {\n//             const windowWidth = window.innerWidth;\n//             const marqueeRow = marqueeItem.querySelector('.marquee__row');\n//             let transition;\n//\n//             setTimeout(() => {\n//                 transition = marqueeRow.offsetWidth - windowWidth + 70;\n//                 marqueeRow.style.cssText = `transform: translateX(${-transition}px);`;\n//             }, 10);\n//\n//             setInterval(() => {\n//                 if (marqueeRow.getBoundingClientRect().left >= 0) {\n//                     marqueeRow.style.cssText = `transform: translateX(${-transition}px);`;\n//                 } else {\n//                     marqueeRow.style.cssText = `transform: translateX(70px);`;\n//                 }\n//             }, time);\n//         });\n//     }\n// }\n//\n// //----------- View Mode ---------------\n// function viewMode(btn) {\n//     const className = btn.dataset.mode;\n//     const grid = btn.closest('.looks') ? document.querySelector('.looks__grid') : document.querySelector('.category__cat');\n//\n//     if (!btn.classList.contains('active')) {\n//         const mode = btn.closest('.mode');\n//         const btns = mode.querySelectorAll('.mode__btn');\n//\n//         btns.forEach((btn) => {\n//             const className = btn.dataset.mode;\n//             grid.classList.remove(className);\n//             btn.classList.remove('active');\n//         });\n//         btn.classList.add('active');\n//         grid.classList.add(className);\n//     }\n// }\n// function viewModeResize() {\n//     const mode = document.querySelector('.main-category__mode');\n//\n//     if (mode) {\n//         const modeBtns = mode.querySelectorAll('.mode__btn');\n//         const mode2 = mode.querySelector('.grid2');\n//         const mode3 = mode.querySelector('.grid3');\n//         const mode4 = mode.querySelector('.grid4');\n//         const catalog = document.querySelector('.catalog');\n//\n//         if (window.innerWidth <= 576 && mode4.classList.contains('active')) {\n//             mode4.classList.remove('active');\n//             mode3.classList.add('active');\n//             catalog.classList.remove('grid4');\n//             catalog.classList.add('grid3');\n//         }\n//\n//         if (window.innerWidth <= 480 && mode3.classList.contains('active')) {\n//             mode3.classList.remove('active');\n//             mode2.classList.add('active');\n//             catalog.classList.remove('grid3');\n//             catalog.classList.add('grid2');\n//         }\n//     }\n//\n// }\n//\n// //---------- Delete Form ------------\n// function showDeleteForm(btn) {\n//     const form = btn.closest('form');\n//     form.nextElementSibling.classList.add('active');\n// }\n// function hideDeleteForm(btn) {\n//     const form = btn.parentElement.classList.remove('active');\n// }\n//\n// //----------- Filter ---------------\n// function showFilter() {\n//     const filter = document.querySelector('.filter');\n//\n//     filter.classList.add('active');\n//     BODY.classList.add('_lock');\n// }\n// function hideFilter() {\n//     const filter = document.querySelector('.filter');\n//\n//     filter.classList.remove('active');\n//     BODY.classList.remove('_lock');\n// }\n//\n// function filtersItemDelete(btn) {\n//     btn.classList.add('del');\n//     setTimeout(() => {\n//         btn.remove();\n//     }, 300);\n//\n//     filtersCheckboxUnset(btn);\n//     filtersColorsUnset(btn);\n//     filtersSalesUnset(btn);\n//     filterPriceUnset();\n// }\n//\n// function filtersClear(btn) {\n//     const filter = btn.closest('.filters');\n//     const filterItems = filter.querySelectorAll('.filters__item');\n//\n//     if (filterItems.length) {\n//         filterItems.forEach((filterItem) => {\n//             filterItem.classList.add('del');\n//             filtersCheckboxUnset(filterItem);\n//             filtersColorsUnset(filterItem);\n//             filtersSalesUnset(filterItem);\n//             filterPriceUnset();\n//             setTimeout(() => {\n//                 filterItem.remove();\n//             }, 300);\n//         });\n//     }\n// }\n//\n// function filtersNewItem(value, className, className2) {\n//     const filterList = document.querySelector('.filters__list');\n//\n//     const newItem = document.createElement('li');\n//     newItem.classList.add('filters__item');\n//\n//     if (className) {\n//         newItem.classList.add(className);\n//     }\n//\n//     if (className2) {\n//         newItem.classList.add(className2);\n//     }\n//\n//     const newBtn = document.createElement('button');\n//     newBtn.setAttribute('type', 'button');\n//     newBtn.classList.add('filters__btn');\n//     newBtn.innerHTML = value;\n//\n//     newItem.append(newBtn);\n//     filterList.append(newItem);\n// }\n//\n// function filtersCheckbox(btn) {\n//     const value = btn.querySelector('span').innerHTML;\n//\n//     if (btn.classList.contains('active')) {\n//         filtersNewItem(value);\n//     } else {\n//         const filterBtns = document.querySelectorAll('.filters__btn');\n//         filterBtns.forEach((filterBtn) => {\n//             if (filterBtn.innerHTML == value) {\n//                 filterBtn.parentElement.classList.add('del');\n//\n//                 setTimeout(() => {\n//                     filterBtn.parentElement.remove();\n//                 }, 300);\n//             }\n//         });\n//     }\n// }\n//\n// function filtersCheckboxUnset(btn) {\n//     const value = btn.querySelector('button').innerHTML;\n//     const checkboxes = document.querySelectorAll('.filter .checkbox');\n//\n//     checkboxes.forEach((checkbox) => {\n//         if (checkbox.querySelector('span').innerHTML == value) {\n//             checkbox.querySelector('input').checked = false;\n//             checkbox.classList.remove('active');\n//         }\n//     });\n// }\n//\n// function filtersColor(btn) {\n//     const input = btn.querySelector('input');\n//     const color = btn.querySelectorAll('span')[1].innerHTML;\n//     const className = 'filters__color';\n//     const className2 = `filters__color_${input.value}`;\n//\n//     if (btn.classList.contains('active')) {\n//         filtersNewItem('<span></span>' + color, className, className2);\n//     } else {\n//         const filterColors = document.querySelectorAll('.filters__color');\n//         filterColors.forEach((filterColor) => {\n//             if (filterColor.innerText == color) {\n//                 filterColor.classList.add('del');\n//\n//                 setTimeout(() => {\n//                     filterColor.remove();\n//                 }, 300);\n//             }\n//         });\n//     }\n// }\n//\n// function filtersColorsUnset(btn) {\n//     const value = btn.querySelector('button').innerText;\n//     const checkboxes = document.querySelectorAll('.filter__color');\n//\n//     checkboxes.forEach((checkbox) => {\n//         if (checkbox.querySelectorAll('span')[1].innerHTML == value) {\n//             checkbox.querySelector('input').checked = false;\n//             checkbox.classList.remove('active');\n//         }\n//     });\n// }\n//\n// function filtersSales(btn) {\n//     const value = btn.querySelector('span').innerHTML;\n//     const className = 'filters__sale';\n//\n//     const filtersSales = document.querySelector('.filters__sale');\n//\n//     if (btn.classList.contains('_active') && !filtersSales) {\n//         filtersNewItem(value, className);\n//     } else {\n//         filtersSales.querySelector('button').innerHTML = value;\n//     }\n// }\n//\n// function filtersSalesUnset(btn) {\n//     const value = btn.querySelector('button').innerText;\n//     const radioItems = document.querySelectorAll('.filter .radio-options__item');\n//\n//     radioItems.forEach((radioItem) => {\n//         if (radioItem.innerText == value) {\n//             radioItem.querySelector('input').checked = false;\n//             radioItem.classList.remove('_active');\n//         }\n//     });\n// }\n//\n// function filterPrice() {\n//     const filter = document.querySelector('.filter');\n//     if (filter) {\n//         const minPrice = document.querySelector('.filter .range__min');\n//         const maxPrice = document.querySelector('.filter .range__max');\n//         const className = 'filters__price';\n//\n//         let filtersPrice = document.querySelector('.filters .filters__price');\n//         let value = `$ ${minPrice.value} - $ ${maxPrice.value}`;\n//\n//         minPrice.addEventListener('input', () => {\n//             filtersPrice = document.querySelector('.filters .filters__price');\n//             value = `$ ${minPrice.value} - $ ${maxPrice.value}`;\n//             if (!document.querySelector('.filters .filters__price')) {\n//                 filtersNewItem(value, className);\n//             } else {\n//                 filtersPrice.querySelector('button').innerHTML = value;\n//             }\n//             showDialog();\n//         });\n//\n//         maxPrice.addEventListener('input', () => {\n//             filtersPrice = document.querySelector('.filters .filters__price');\n//             value = `$ ${minPrice.value} - $ ${maxPrice.value}`;\n//             if (!filtersPrice) {\n//                 filtersNewItem(value, className);\n//             } else {\n//                 filtersPrice.querySelector('button').innerHTML = value;\n//             }\n//             showDialog();\n//         });\n//     }\n// }\n//\n// // function filterPriceUnset() {\n// //     const range = document.querySelector('.range');\n// //\n// //     if (range) {\n// //         const inputLeft = range.querySelector('.range__min');\n// //         const inputRight = range.querySelector('.range__max');\n// //         const thumbLeft = range.querySelector('.range__thumb-left');\n// //         const thumbRight = range.querySelector('.range__thumb-right');\n// //         const thumbLeftValue = thumbLeft.querySelector('.range__value span');\n// //         const thumbRightValue = thumbRight.querySelector('.range__value span');\n// //         const progress = range.querySelector('.range__progress');\n// //         let inputMinValue = range.nextElementSibling.querySelector('input[name=min]');\n// //         let inputMaxValue = range.nextElementSibling.querySelector('input[name=max]');\n// //\n// //         inputLeft.value = inputLeft.min;\n// //         inputRight.value = inputRight.max;\n// //         thumbLeft.style.left = '0%';\n// //         thumbRight.style.right = '0%';\n// //         inputMinValue.value = inputLeft.min;\n// //         inputMaxValue.value = inputRight.max;\n// //         thumbLeftValue.innerHTML = inputLeft.min;\n// //         thumbRightValue.innerHTML = inputRight.max;\n// //         progress.style.cssText = 'left: 0, right: 0';\n// //     }\n// // }\n//\n// function showDialog() {\n//     const dialog = document.querySelector('.dialog-filter');\n//\n//     if (dialog && !dialog.classList.contains('active')) {\n//         dialog.classList.add('active');\n//     }\n// }\n// function hideDialog() {\n//     const dialog = document.querySelector('.dialog-filter');\n//\n//     if (dialog && dialog.classList.contains('active')) {\n//         dialog.classList.remove('active');\n//     }\n// }\n//\n// //----------- Contact Form ---------------\n// function emailTest(input) {\n//     return !/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,8})+$/.test(input.value);\n// }\n// function checkEmailValue(email, input) {\n//     if (emailTest(input)) {\n//         email.classList.add('error');\n//     } else {\n//         email.classList.remove('error');\n//     }\n// }\n//\n// function checkEmail(email) {\n//     const input = email.querySelector('input');\n//\n//     if (!email.classList.contains('error')) {\n//         input.addEventListener('blur', () => {\n//             checkEmailValue(email, input);\n//             checkIfDone(email);\n//         });\n//     } else {\n//         input.addEventListener('blur', () => {\n//             checkEmailValue(email, input);\n//             checkIfDone(email);\n//         });\n//     }\n// }\n//\n// function checkLimitValue(limit, input) {\n//     const minValue = limit.dataset.limit;\n//\n//     if (input.value.length < minValue) {\n//         limit.classList.add('warning');\n//     } else {\n//         limit.classList.remove('warning');\n//     }\n// }\n// function checkLimit(limit) {\n//     const input = limit.querySelector('input') ? limit.querySelector('input') : limit;\n//\n//     if (!limit.classList.contains('warning')) {\n//         input.addEventListener('blur', () => {\n//             checkLimitValue(limit, input);\n//             checkIfDone(limit);\n//         });\n//     } else {\n//         input.addEventListener('input', () => {\n//             checkLimitValue(limit, input);\n//             checkIfDone(limit);\n//         });\n//     }\n// }\n// function checkIfDone(input) {\n//     if (!input.classList.contains('error') && !input.classList.contains('warning')) {\n//         input.classList.add('done');\n//     } else {\n//         input.classList.remove('done');\n//     }\n// }\n// function showHelpMessage(btn) {\n//     hideHelpMessages();\n//     btn.parentElement.classList.add('active');\n// }\n// function hideHelpMessages() {\n//     const helps = document.querySelectorAll('.help');\n//\n//     if (helps) {\n//         helps.forEach((help) => {\n//             help.classList.remove('active');\n//         });\n//     }\n// }\n//\n// //----------- Image viewer ---------------\n// const viewerSlider = new Swiper('.viewer__slider', {\n//     modules: [Navigation],\n//     observer: true,\n//     observeParents: true,\n//     observeSlideChildren: true,\n//     slidesPerView: 1,\n//     centeredSlides: true,\n//     navigation: {\n//         prevEl: '.viewer__prev',\n//         nextEl: '.viewer__next',\n//     },\n//     on: {\n//         slideChange: function () {\n//             functions.lazyLoading();\n//             const images = document.querySelectorAll('.viewer__image');\n//             if (images.length) {\n//                 images.forEach((image) => {\n//                     image.classList.remove('active');\n//                     image.querySelector('img').style.maxHeight = 'calc(100vh - 60px)';\n//                 });\n//             }\n//         },\n//     },\n// });\n// function imageViewer(btn) {\n//     const viewer = document.querySelector('.viewer__wrapper');\n//\n//     const imageItems = document.querySelectorAll('.image-product__item');\n//     if (imageItems.length) {\n//         imageItems.forEach((imageItem, index) => {\n//             const picture = imageItem.querySelector('picture').outerHTML;\n//\n//             const slide = document.createElement('div');\n//             slide.classList.add('viewer__slide');\n//             slide.classList.add('swiper-slide');\n//\n//             const image = document.createElement('div');\n//             image.classList.add('viewer__image');\n//\n//             image.innerHTML = picture;\n//             slide.append(image);\n//             viewer.append(slide);\n//\n//             if (imageItem.querySelector('picture') == btn.parentElement.querySelector('picture') && index != 0) {\n//                 viewerSlider.slideTo(index, false, false);\n//             }\n//         });\n//     }\n// }\n// function viewerClear() {\n//     const viewer = document.querySelector('.viewer__wrapper');\n//\n//     viewer.classList.remove('active');\n//     viewer.innerHTML = '';\n// }\n// function viewerZoom(image) {\n//     const imageItem = image.closest('.viewer__image');\n//     imageItem.classList.toggle('active');\n//\n//     if (imageItem.classList.contains('active')) {\n//         image.style.maxHeight = image.naturalHeight + 'px';\n//     } else {\n//         image.style.maxHeight = 'calc(100vh - 60px)';\n//     }\n// }\n//\n// //----------- Product ---------------\n// function showAllShops() {\n//     const shopsList = document.querySelector('.shops');\n//\n//     if (shopsList) {\n//         shopsList.classList.add('active');\n//     }\n// }\n// function hideAllShops() {\n//     const shopsList = document.querySelector('.shops');\n//\n//     if (shopsList) {\n//         shopsList.classList.remove('active');\n//     }\n// }\n// function deleteProduct(btn) {\n//     const product = btn.closest('.prod-card');\n//\n//     product.classList.add('del');\n//     setTimeout(() => {\n//         product.remove();\n//     }, 500);\n// }\n//\n// // //----------- Cookies ---------------\n// // function showCookies() {\n// //     const cookies = document.querySelector('.cookies');\n// //     if (cookies) {\n// //         setTimeout(() => {\n// //             cookies.classList.add('active');\n// //         }, 3000);\n// //     }\n// // }\n// // function hideCookies(btn) {\n// //     const cookies = btn.closest('.cookies');\n// //     cookies.classList.remove('active');\n// // }\n//\n// //----------- Login ---------------\n// function hideLoginLink() {\n//     const inputs = document.querySelectorAll('input[type=password]');\n//     if (inputs.length) {\n//         inputs.forEach((input) => {\n//             input.addEventListener('focus', () => {\n//                 input.parentElement.classList.add('active');\n//             });\n//             input.addEventListener('blur', () => {\n//                 input.parentElement.classList.remove('active');\n//             });\n//         });\n//     }\n// }\n//\n// window.addEventListener('DOMContentLoaded', () => {\n//     appHeight();\n//\n//     functions.isWebp();\n//     functions.menuBurger();\n//     functions.lazyLoading();\n//     functions.moveElement();\n//\n//     page.spollers();\n//     page.tabs();\n//     // page.popup();\n//\n//     form.radio();\n//     form.select();\n//     form.checkbox();\n//     form.range();\n//\n//     // Filter price\n//     filterPrice();\n//\n//     // Main page\n//     mainGoodsSlider();\n//     mainCatSlider();\n//     mainCatSlider2();\n//     marquee(20200);\n//\n//     // Colors slider\n//     prodCardColors();\n//\n//     // One look\n//     oneLookSlider();\n//\n//     // Product\n//     productSlider();\n//\n//     // Login\n//     hideLoginLink();\n//\n//     // View mode\n//     viewModeResize();\n//\n//     // Cookies\n//     // showCookies();\n// });\n//\n// window.addEventListener('resize', () => {\n//     appHeight();\n//     viewModeResize();\n//     deactivateMenu();\n// });\n//\n// document.addEventListener('click', (e) => {\n//     // ----------- View mode -----------\n//     const viewBtn = e.target.closest('.mode__btn');\n//     if (viewBtn) {\n//         viewMode(viewBtn);\n//     }\n//\n//     // ----------- Delete form -----------\n//     const deleteBtn = e.target.closest('.form-account__delete');\n//     if (deleteBtn) {\n//         showDeleteForm(deleteBtn);\n//     }\n//\n//     const cancelBtn = e.target.closest('.delete-account__cancel');\n//     if (cancelBtn) {\n//         hideDeleteForm(cancelBtn);\n//     }\n//\n//     // ----------- Menu -----------\n//     const menuLink = e.target.closest('.menu__link');\n//     if (menuLink) {\n//         menu(menuLink);\n//         submenuHeight();\n//     }\n//\n//     const submenuCloseBtn = e.target.closest('.submenu__close');\n//     if (submenuCloseBtn) {\n//         submenuHide();\n//     }\n//\n//     const userBtn = e.target.closest('.user-header');\n//     if (userBtn) {\n//         showUserMenu();\n//     } else {\n//         hideUserMenu();\n//     }\n//\n//     const searchBtn = e.target.closest('.header__search-icon');\n//     if (searchBtn) {\n//         showSearch();\n//     }\n//\n//     const searchClose = e.target.closest('.search__close');\n//     if (searchClose) {\n//         hideSearch();\n//     }\n//\n//     const menuIcon = e.target.closest('.menu-icon');\n//     if (menuIcon) {\n//         activateSubmenu();\n//     }\n//\n//     // ----------- Filter -----------\n//     const filterBtn = e.target.closest('.main-category__filter');\n//     if (filterBtn) {\n//         showFilter();\n//     }\n//\n//     const filterClose = e.target.closest('.filter__close');\n//     if (filterClose) {\n//         hideFilter();\n//     }\n//\n//     const filtersItem = e.target.closest('.filters__item');\n//     if (filtersItem) {\n//         filtersItemDelete(filtersItem);\n//     }\n//\n//     // const filterClearBtn = e.target.closest('.filters__clear');\n//     // if (filterClearBtn) {\n//     //     filtersClear(filterClearBtn);\n//     // }\n//\n//     const filterCheckbox = e.target.closest('.filter__checkbox');\n//     if (filterCheckbox) {\n//         filtersCheckbox(filterCheckbox);\n//         showDialog();\n//     }\n//\n//     const filterSize = e.target.closest('.filter__size');\n//     if (filterSize) {\n//         filtersCheckbox(filterSize);\n//         showDialog();\n//     }\n//\n//     const filterColor = e.target.closest('.filter__color');\n//     if (filterColor) {\n//         filtersColor(filterColor);\n//         showDialog();\n//     }\n//\n//     const filterSale = e.target.closest('.filter .radio-options__item');\n//     if (filterSale) {\n//         filtersSales(filterSale);\n//         showDialog();\n//     }\n//\n//     const dialogCancelBtn = e.target.closest('.dialog-filter__cancel');\n//     if (dialogCancelBtn) {\n//         hideDialog();\n//     }\n//\n//     // ----------- Contact Form -----------\n//     const email = e.target.closest('.email');\n//     if (email) {\n//         checkEmail(email);\n//     }\n//\n//     const limit = e.target.closest('.limit');\n//     if (limit) {\n//         checkLimit(limit);\n//     }\n//\n//     const helpBtn = e.target.closest('.help__btn');\n//     if (helpBtn) {\n//         showHelpMessage(helpBtn)\n//     } else {\n//         hideHelpMessages();\n//     }\n//\n//     // ----------- Image view -----------\n//     const imageBtn = e.target.closest('.image-product__btn');\n//     if (imageBtn) {\n//         imageViewer(imageBtn);\n//     }\n//\n//     const viewerClose = e.target.closest('.viewer__close');\n//     if (viewerClose) {\n//         viewerClear();\n//     }\n//\n//     const imageZoom = e.target.closest('.viewer__image img');\n//     if (imageZoom) {\n//         viewerZoom(imageZoom);\n//     }\n//\n//     // ----------- Product -----------\n//     const allShopsBtn = e.target.closest('.about-product__all');\n//     if (allShopsBtn) {\n//         showAllShops();\n//     }\n//\n//     const allShopsCloseBtn = e.target.closest('.shops__close');\n//     if (allShopsCloseBtn) {\n//         hideAllShops();\n//     }\n//\n//     const getAlertBtn = e.target.closest('.prices-product__track');\n//     if (getAlertBtn) {\n//         getAlertBtn.classList.toggle('active');\n//     }\n//\n//     const favoriteBtn = e.target.closest('.prod-card__favorite');\n//     if (favoriteBtn) {\n//         favoriteBtn.classList.toggle('active');\n//     }\n//\n//     const deleteProductBtn = e.target.closest('.prod-card__delete');\n//     if (deleteProductBtn) {\n//         deleteProduct(deleteProductBtn);\n//     }\n//\n//     // // ----------- Cookies -----------\n//     // const cookiesBtn = e.target.closest('.cookies__btn');\n//     // if (cookiesBtn) {\n//     //     hideCookies(cookiesBtn);\n//     // }\n// });\n//\n// document.addEventListener('keydown', (e) => {\n//     if (e.key === 'Escape') {\n//         const viewerClose = document.querySelector('.viewer__close')\n//         if (viewerClose && viewerClose.closest('.popup').classList.contains('open')) {\n//             viewerClose.click();\n//         }\n//         hideDialog();\n//     }\n// });\n\n//# sourceURL=webpack://Project/./src/js/app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/app.js"](0, __webpack_exports__, __webpack_require__);
/******/ 	
/******/ })()
;